# Generated by Django 5.1.1 on 2024-10-31 12:14

import django.core.validators
import django.db.models.deletion
import month.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, verbose_name='именем')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=100, verbose_name='ФИО')),
                ('skills', models.TextField(verbose_name='Ваши технологии')),
                ('years_of_work', models.CharField(max_length=50, verbose_name='Опыт работы')),
                ('position', models.CharField(blank=True, max_length=50, null=True, verbose_name='Желаемая должность')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Адрес электронной почты')),
                ('about', models.TextField(blank=True, max_length=700, null=True, verbose_name='О себе')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть введен в формате:                                     '+79991234567' или '89991234567'. Должно быть 10 цифр после кода.", regex='^(?:\\+7|8)\\d{10}$')], verbose_name='Номер телефона')),
                ('github', models.URLField(blank=True, verbose_name='Ссылка на GitHub')),
                ('telegram', models.URLField(blank=True, null=True, verbose_name='Ссылка на Telegram')),
                ('vk', models.URLField(blank=True, verbose_name='Ссылка на vk')),
                ('linkedIn', models.URLField(blank=True, null=True, verbose_name='Ссылка на linkedIn')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resumes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'резюме',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название проекта')),
                ('project_description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('technologies_used', models.TextField(blank=True, null=True, verbose_name='Использованные технологии и решения')),
                ('github_link', models.URLField(blank=True, null=True, verbose_name='ссылка на репозиторий github')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='app.resume')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название учебного заведения (если есть)')),
                ('faculty', models.CharField(blank=True, max_length=25, null=True, verbose_name='Факультет/название курса')),
                ('degree', models.CharField(blank=True, max_length=255, null=True, verbose_name='Степень (если это вуз)')),
                ('start_date', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год поступления')),
                ('end_date', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год окончания обучения')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='app.resume')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название организации')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Позиция')),
                ('start_date', month.models.MonthField(blank=True, null=True, verbose_name='Дата устроства')),
                ('end_date', month.models.MonthField(blank=True, null=True, verbose_name='Дата ухода (если есть)')),
                ('work_description', models.TextField(blank=True, null=True, verbose_name='Описание работы')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='app.resume')),
            ],
        ),
        migrations.AddIndex(
            model_name='resume',
            index=models.Index(fields=['-id'], name='app_resume_id_6c6ef3_idx'),
        ),
    ]
